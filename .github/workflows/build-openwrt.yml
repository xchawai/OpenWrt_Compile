name: Build and Release OpenWrt

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OPENWRT_BRANCH: "openwrt-21.02"  # 指定OpenWrt分支

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Build Environment and Create Working Directory
      run: |
        # 更新系统和安装必要的依赖
        sudo apt update
        sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
        gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
        file wget
        # 设置时区为上海
        sudo timedatectl set-timezone Asia/Shanghai
      shell: bash

    - name: Clone OpenWrt Repository
      run: |
        # 克隆OpenWrt源码
        git clone https://github.com/openwrt/openwrt.git openwrt
      shell: bash

    - name: Load Configuration
      run: |
        # 复制配置文件
        cp .config openwrt/
        # 加载OpenWrt配置并获取目标架构
        TARGET_BOARD=$(grep '^CONFIG_TARGET_BOARD=' openwrt/.config | sed 's/^CONFIG_TARGET_BOARD=//')
        TARGET_SUBTARGET=$(grep '^CONFIG_TARGET_SUBTARGET=' openwrt/.config | sed 's/^CONFIG_TARGET_SUBTARGET=//')
        FIRMWARE_DIR=openwrt/bin/targets/$TARGET_BOARD/$TARGET_SUBTARGET
        echo "FIRMWARE_DIR=$FIRMWARE_DIR" >> $GITHUB_ENV
      shell: bash

    - name: Make Default Configuration
      run: |
        # 使用make defconfig根据配置文件设置默认配置
        cd openwrt
        make defconfig
      shell: bash

    - name: Switch to Selected Branch
      run: |
        # 切换到指定的OpenWrt分支
        cd openwrt
        git checkout $OPENWRT_BRANCH
      shell: bash

    - name: Clone Third-Party Repo
      run: |
        # 合并第三方仓库配置并安装依赖
        cat third-party-repo.conf >> openwrt/feeds.conf.default
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      shell: bash

    - name: Run Modification Script
      run: |
        # 运行修改脚本
        if [ -f modification.sh ]; then
          chmod +x modification.sh
          ./modification.sh
        fi
      shell: bash

    - name: Build OpenWrt
      run: |
        # 构建OpenWrt固件
        cd openwrt
        make -j$(nproc) download
        make -j$(nproc) || exit 1
        make package/index
      continue-on-error: true

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-artifacts
        path: ${{ env.FIRMWARE_DIR }}

    - name: Create Release
      run: |
        # 创建GitHub Release
        DATE=$(date +%Y.%m.%d)
        RELEASE_NAME="OpenWrt $OPENWRT_BRANCH $DATE"
        gh release create "$RELEASE_NAME" ${{ env.FIRMWARE_DIR }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
